packer {
  required_plugins {
    virtualbox = {
      version = "~> 1"
      source  = "github.com/hashicorp/virtualbox"
    }
  }
}

source "virtualbox-iso" "autogenerated_1" {
  boot_command   = ["<esc><wait>vmlinuz initrd=initrd.img inst.text inst.ks=http://{{ .HTTPIP }}:{{ .HTTPPort }}/anaconda-ks.cfg<enter><wait>"]
  http_directory = "http"
  boot_wait      = "10s"
  guest_os_type  = "RedHat_64"
  headless       = false
  // iso_url          = "https://download.rockylinux.org/pub/rocky/9/isos/x86_64/Rocky-9.3-x86_64-minimal.iso"
  iso_url          = "d:/install/linux//Rocky-9.3-x86_64-minimal.iso"
  iso_checksum     = "sha256:eef8d26018f4fcc0dc101c468f65cbf588f2184900c556f243802e9698e56729"
  ssh_username     = "vagrant"
  ssh_password     = "vagrant"
  ssh_wait_timeout = "10000s"
  shutdown_command = "echo 'packer' | sudo -S shutdown -P now"
  vboxmanage       = [["modifyvm", "{{.Name}}", "--nat-localhostreachable1", "on"], ["modifyvm", "{{ .Name }}", "--memory", "4096"], ["modifyvm", "{{ .Name }}", "--cpus", "4"]]
}

build {
  sources = ["sources.virtualbox-iso.autogenerated_1"]

  provisioner "shell" {
    inline = [
      "sudo yum update -y",
      "sudo yum install -y kernel-devel gcc binutils make perl-interpreter elfutils-libelf-devel"
    ]
  }

  provisioner "shell" {
    execute_command = "echo 'vagrant' | {{ .Vars }} sudo -E -S bash '{{ .Path }}'"
    script          = "../scripts/vagrant.sh"
  }

  // Convert machines to vagrant boxes
  post-processor "vagrant" {
    compression_level   = 9
    keep_input_artifact = true
    output              = "box/rocky_sisfenix_{{ .Provider }}.box"
  }
}
